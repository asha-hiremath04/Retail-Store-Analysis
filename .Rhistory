dbListTables(con)
library(DBI)
library(RMySQL)
con <- dbConnect(RMySQL::MySQL(),
dbname = "retail_store_analysis",
host = "localhost",
user = "root",
password = "your_password")
install.packages("DBI")
install.packages("RMySQL")
library(DBI)
library(RMySQL)
con <- dbConnect(RMySQL::MySQL(),
dbname = "retail_store_analysis",
host = "localhost",
user = "root",
password = "your_password")  # Replace with your actual MySQL password
install.packages("DBI")
install.packages("RMySQL")
library(DBI)
library(RMySQL)
library(DBI)
library(RMySQL)
library(DBI)
library(RMySQL)
ls("package:DBI")
installed.packages()["RMySQL", ]
library(DBI)
library(RMySQL)
con <- dbConnect(RMySQL::MySQL(),
dbname = "retail_store_analysis",
host = "127.0.0.1",  # Use 127.0.0.1 instead of "localhost"
user = "root",
password = "your_password")  # Replace with your actual password
View(con)
dbListTables(con)
data <- dbGetQuery(con, "SELECT * FROM stores")
head(data)  # Display the first few rows of the data
# Install necessary packages if not installed already
install.packages("DBI")
install.packages("RMySQL")
install.packages("ggplot2")
# Replace missing Profit Margin with the mean value
data$Profit_Margin[is.na(data$Profit_Margin)] <- mean(data$Profit_Margin, na.rm = TRUE)
# Install necessary packages if not installed already
install.packages("DBI")
install.packages("RMySQL")
install.packages("ggplot2")
# Replace missing Profit Margin with the mean value
data$Profit_Margin[is.na(data$Profit_Margin)] <- mean(data$Profit_Margin, na.rm = TRUE)
# Replace missing Profit Margin with the mean value
data$Profit_Margin[is.na(data$Profit_Margin)] <- mean(data$Profit_Margin, na.rm = TRUE)
data$Profit_Margin[is.na(data$Profit_Margin)] <- mean(data$Profit_Margin, na.rm = TRUE)
ggplot(data, aes(x = Store_Area, y = Store_Sales)) +
geom_point() +
labs(title = "Store Area vs Store Sales", x = "Store Area (sq. ft.)", y = "Store Sales")
# Install ggplot2 if it isn't installed already
install.packages("ggplot2")
# Convert Profit_Margin to numeric (if it isn't already)
data$Profit_Margin <- as.numeric(data$Profit_Margin)
data$Profit_Margin <- as.numeric(data$Profit_Margin)
data$Profit_Margin <- as.numeric(data$Profit_Margin)
data$Profit_Margin[is.na(data$Profit_Margin)] <- mean(data$Profit_Margin, na.rm = TRUE)
# Scatter plot for Store Area vs Store Sales
ggplot(data, aes(x = Store_Area, y = Store_Sales)) +
geom_point() +
labs(title = "Store Area vs Store Sales", x = "Store Area (sq. ft.)", y = "Store Sales")
# Load the ggplot2 library
library(ggplot2)
# Scatter plot for Store Area vs Store Sales
ggplot(data, aes(x = Store_Area, y = Store_Sales)) +
geom_point() +
labs(title = "Store Area vs Store Sales", x = "Store Area (sq. ft.)", y = "Store Sales")
# Linear regression to analyze the relationship between Store Area, Items Available, and Store Sales
model <- lm(Store_Sales ~ Store_Area + Items_Available, data = data)
summary(model)  # Show the regression model summary
# Perform K-means clustering
set.seed(123)  # For reproducibility
kmeans_result <- kmeans(data[, c("Store_Area", "Store_Sales", "Daily_Customer_Count")], centers = 3)
# Add cluster labels to the data
data$Cluster <- as.factor(kmeans_result$cluster)
# Visualize the clusters
ggplot(data, aes(x = Store_Area, y = Store_Sales, color = Cluster)) +
geom_point() +
labs(title = "Store Area vs Store Sales by Cluster", x = "Store Area (sq. ft.)", y = "Store Sales")
# Bar chart for Store Sales by Size Category
ggplot(data, aes(x = Store_Size_Category, y = Store_Sales, fill = Store_Size_Category)) +
geom_bar(stat = "identity") +
labs(title = "Store Sales by Size Category", x = "Store Size", y = "Store Sales")
# Box plot for Customer Density by Revenue Category
ggplot(data, aes(x = Revenue_Category, y = Customer_Density, fill = Revenue_Category)) +
geom_boxplot() +
labs(title = "Customer Density by Revenue Category", x = "Revenue Category", y = "Customer Density")
# Install necessary packages if not installed already
install.packages("DBI")
install.packages("RMySQL")
install.packages("ggplot2")
install.packages("readxl")
# Load libraries
library(DBI)
library(RMySQL)
library(ggplot2)
library(readxl)
con <- dbConnect(MySQL(), dbname = "retail_store_analysis", host = "localhost", user = "root", password = "your_password")
con <- dbConnect(MySQL(), dbname = "retail_store_analysis", host = "localhost", user = "root", password = "your_password")
data <- dbGetQuery(con, "SELECT * FROM stores")
data <- dbGetQuery(con, "SELECT * FROM stores")
head(data)
data$Profit_Margin[is.na(data$Profit_Margin)] <- mean(data$Profit_Margin, na.rm = TRUE)
data$Profit_Margin <- as.numeric(data$Profit_Margin)
# Scatter plot for Store Area vs Store Sales
ggplot(data, aes(x = Store_Area, y = Store_Sales)) +
geom_point() +
labs(title = "Store Area vs Store Sales", x = "Store Area (sq. ft.)", y = "Store Sales")
model <- lm(Store_Sales ~ Store_Area + Items_Available + Daily_Customer_Count, data = data)
summary(model)
# Perform K-means clustering
set.seed(123)
kmeans_result <- kmeans(data[, c("Store_Area", "Store_Sales", "Daily_Customer_Count")], centers = 3)
data$Cluster <- as.factor(kmeans_result$cluster)
# Visualize the clusters
ggplot(data, aes(x = Store_Area, y = Store_Sales, color = Cluster)) +
geom_point() +
labs(title = "Store Area vs Store Sales by Cluster", x = "Store Area (sq. ft.)", y = "Store Sales")
data_excel <- read_excel("Project_data_02.xlsx")
clear
clearPushBack()
# Connect to the database
con <- dbConnect(MySQL(), dbname = "retail_store_analysis", host = "localhost", user = "root", password = "your_password")
# Fetch data from the database
data <- dbGetQuery(con, "SELECT * FROM stores")
# Check the first few rows of the data
head(data)
# Replace missing Profit Margin with the mean value
data$Profit_Margin[is.na(data$Profit_Margin)] <- mean(data$Profit_Margin, na.rm = TRUE)
# Read data from Excel
data_excel <- read_exc
data_excel <- read_excel("Project_data_02.xlsx")
head(data_excel)
summary(data_excel$Store_Sales)
# Bar Plot: Average Store Sales by Revenue Category
ggplot(data_excel, aes(x = Revenue_Category, y = Store_Sales)) +
stat_summary(fun = mean, geom = "bar", fill = "skyblue") +
labs(title = "Average Store Sales by Revenue Category")
cor(data_excel$Store_Area, data_excel$Store_Sales)
# Customer Behavior Analysis
ggplot(data_excel, aes(x = Daily_Customer_Count, fill = Revenue_Category)) +
geom_density(alpha = 0.5) +
labs(title = "Customer Count Distribution by Revenue Category")
# Customer Behavior Analysis
ggplot(data_excel, aes(x = Daily_Customer_Count, fill = Revenue_Category)) +
geom_density(alpha = 0.5) +
labs(title = "Customer Count Distribution by Revenue Category")
aggregate(Sales_Per_Customer ~ Store_Size_Category, data = data_excel, mean)
data <- read.csv("Datass.csv", header = TRUE, stringsAsFactors = FALSE)
# Load libraries
library(ggplot2)
library(readr)
install.packages("readr")
library(ggplot2)
library(readr)
library(cluster)
data <- read.csv("Datass.csv", header = TRUE, stringsAsFactors = FALSE)
getwd()
data <- read.csv("C:/Users/YourName/Documents/Datass.csv", header = TRUE, stringsAsFactors = FALSE)
data <- read_csv("Datass.csv")
library(readr)
data <- read_csv("Datass.csv")
head(data)
str(data)
getwd()
list.files()
list.files()
library(readr)
data <- read_csv("C:/Users/LENOVO/Desktop/Retail_store_Anlysis_project/Retail_Store_Analysis/Retail_Store/Datass.csv")
data <- read_csv("Datass.csv", col_names = TRUE)
data <- read_csv("Datass.csv", col_names = TRUE, delim = "\t")
data <- read.csv("Datass.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
data <- read.csv("Datass.csv", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
library(readxl)
data <- read_excel("Datass.csv")
library(readr)
data <- read_excel("Datass.csv")
summary("Datass.csv"$Store_Sales)
install.packages("readxl")
data <- read_csv("Datass.csv")
head(data)
library(readxl)
data <- read_excel("Datass.csv")
library(readr)
library(readxl)
library(ggplot2)
library(cluster)
data <- read_csv("Datass.csv")
data <- read_delim("Datass.csv", delim = ";")
data <- read_delim("Datass.csv", delim = "\t")
head(data)
data <- read_csv("Datass.csv")
summary(data)
data <- read_csv("Datass.csv")
library(janitor)
install.packages("janitor")
library(janitor)
data <- clean_names(data)
data <- read_csv("Datass.csv")
data$Store_Area <- as.numeric(data$Store_Area)
head(data)
str(data)
data <- read_delim("Datass.csv", delim = "\t")
library(janitor)
data <- clean_names(data)
head(data)
str(data)
data <- read_csv("Datass.csv")
summary(data$Store_Sales)
install.packages("readr")
data <- read_csv("Datass.csv")
library(readr)
data <- read_csv("Datass.csv")
ggplot(data, aes(x = Revenue_Category, y = Store_Sales)) +
stat_summary(fun = mean, geom = "bar", fill = "skyblue") +
labs(title = "Average Store Sales by Revenue Category")
install.packages("readr")
install.packages("readxl")
install.packages("ggplot2")
data <- read_csv("Datass.csv")
library(readxl)
Datass <- read_excel("Datass.csv")
library(readxl)
data <- read_excel("Datass.xlsx")
getwd()
library(readxl)
Project_data_01 <- read_excel("Project_data_01.csv")
Project_data_01 <- read.csv("Project_data_01.csv")
install.packages("readr")
library(readr)
Project_data_01 <- read_csv("Project_data_01.csv")
data <- read_csv("Project_data_01.csv")
head(data)
summary(Project_data_01$Store_Sales)
summary(Project_data_01$Estimated_profit)
summary(Project_data_01$Estimated_profit)
summary(Project_data_01$Estimated_profit)
library(readxl)
Project_data_01 <- read_excel("Project_data_01.xlsx")
View(Project_data_01)
> Project_data_01 <- read_excel("Project_data_01.xlsx")
data <- read_excel("Project_data_01.excel")
data <- read_excel("Project_data_01.xlsx")
head(data)
summary(Project_data_01$Store_Sales)
summary(Project_data_01$Estimated_profit)
summary(Project_data_01$Estimated profit)
summary(Project_data_01$Estimated_profit)
View(Project_data_01)
View(Project_data_01)
